
# если не указано, то 
DEFAULT:
    startTestsIfSUSEVers: >
        %{!?enabletaptests:%global enabletaptests 0}
    docker_entrypoint_start: >
        {{SPACE}}
    define_short: --define=
    quotes: >
        '
    segsize: walsegsize
    install_postgresql : |
        #sudo apt-get -y install "${_postgresql_packages[@]}" || _exit $LINENO "Error: apt-get install: postgresql"
        sudo rpm -i --nodeps -f "${_postgresql_packages[@]}" || _exit $LINENO "Error: apt-get install: postgresql"
    run_postgresql_regression_tests: |
        # Run postgresql regression tests
        pushd $_top_path ; if [ -f parent/GNUmakefile ] ; then cp parent/GNUmakefile external/postgresql/src/test/regress/ ; fi
        cd $_top_path/external/postgresql ; make -C src/test/regress check
        popd
    remove_jatoba:
        sudo apt-get -y remove jatoba2-*
    package_manager:
        apt-get
    su_runuser: |
        #if [ -x /sbin/runuser ]
        #then
        #    SU=runuser
        #else
            SU=su
        #fi
    su_bash: -s /bin/bash{{SPACE}}
    brc_compess: >
        %{?beta:%global __os_install_post /usr/lib/rpm/compress_files}
    ext_utils_build: >
        BuildRequires:	perl(ExtUtils/MakeMaker.pm)
    python_devel: >
        BuildRequires:	python-dev
    python3_devel: >
        BuildRequires:	python3-devel
    sysinit: systemd-sysvinit
    perl_test_simple: perl-Test-Simpler
    perl_module_compat: >
        # Requires:	perl(:MODULE_COMPAT_%(eval "`%{__perl} -V:version`"; echo $version))
    cmake_version:
        cmake
    configure_disable_path: disable
    gdalversion: 20
    gdalfullversion: 2.0.2
    global_utils: 0
    global_raster: 1
    geos_devel_choice : |
        %if 0%{?rhel} && 0%{?rhel} <= 6
        BuildRequires:  geos-devel >= %{geosminorversion}
        %else
        BuildRequires:  libgeos-devel >= %{geosminorversion}
        %endif
    proj_devel_choice : |
        {{SPACE}}{{SPACE}}%if 0%{?rhel} && 0%{?rhel} <= 6
        BuildRequires:  proj-devel >= %{projfullversion} flex json-c-devel
        {{SPACE}}{{SPACE}}%else
        BuildRequires:  libproj-devel >= %{projfullversion} flex libjson-c-devel
        {{SPACE}}{{SPACE}}%endif
        %endif
    lib_gdal_devel_choice: |
        {{SPACE}}{{SPACE}}%if 0%{?rhel} && 0%{?rhel} <= 6
        BuildRequires:  gdal-devel >= %{gdalminorversion}
        {{SPACE}}{{SPACE}}%else
        BuildRequires:  libgdal-devel >= %{gdalminorversion}
        {{SPACE}}{{SPACE}}%endif
        
    lib_geos_name : libgeos
    lib_hdf5:  libhdf5-8-seq
    lib_json_name: libjson-c
    lib_gdal_choice: |
        %if 0%{?rhel} && 0%{?rhel} <= 6
        Requires:       gdal-libs >= 1.9.2-9
        %else
        Requires:       gdal >= %{gdalfullversion}
        %endif
    provide_postgiman: >
        Provides:       %{sname}2_%{POSTGRESQL_MAJ_VER} = %{postgismajorversion}.0
    paths_address_standardizer: >
        %{JATOBA_DIR_HOME}/lib/liblwgeom.so
    docker_command: >
        CMD source ~/.bashrc && /srv/app/Jatoba/install/rpm/build.sh
    check_gcc: |
        check_gcc || _exit $LINENO "GNU C Compiler not found."
        local _gcc_major_version=$(gcc -dumpversion | sed -n 's/\([0-9]\+\).*/\1/p')
    gcc_name: gcc
    lib_uuid_devel: uuid-devel
    prepare_gcc_path: |
        export CC=/opt/gcc-8.1.0/bin/gcc
        export CXX=/opt/gcc-8.1.0/bin/g++
    perl_glibc_bison: >
        BuildRequires:	perl glibc-devel bison flex >= 2.5.31
    perl_name: perl
    jadog_ncurses: |
        BuildRequires: ncurses-devel
        Requires: ncurses


ROSA73:
    (*): [ALTEROS7]
    os_name: rosa73
    os_adder: cobalt
    text_name: семейство RedHat, ROSA Enterprise Linux 7.3
    docker_image: jatoba-rosa:7.3
    docker_command: CMD source ~/.bashrc && /srv/app/Jatoba/install/rpm/build.sh
    cmake_version: cmake
    python3_devel: >
        BuildRequires:	python34-devel
    python_devel: >
        BuildRequires:	python2-devel

RHEL82:
    (*): [RHEL78]
    os_name: rhel82
    os_adder: Null
    text_name: семейство RedHat, RedHat Enterprise Linux 8.2
    docker_image: jatoba-rhel:8.2
    docker_command: CMD source ~/.bashrc && /srv/app/Jatoba/install/rpm/build.sh
    disable_params: Null
    cmake_version: cmake3

RHEL79:
    (*): [RHEL78]
    os_name: rhel79
    os_adder: >
        {{EMPTY}}
    text_name: семейство RedHat, RedHat Enterprise Linux 7.9
    docker_image: jatoba-rhel:7.9
    docker_command: CMD source ~/.bashrc && /srv/app/Jatoba/install/rpm/build.sh
    cmake_version: cmake
    google_tests:
        ->: OPENSUSE15SP3
    disable_params:
        ->: OPENSUSE15SP3

RHEL78:
    (*): [ALTEROS7]
    os_name: rhel78
    os_adder: >
        {{EMPTY}}
    text_name: семейство RedHat, RedHat Enterprise Linux 7.8
    docker_image: jatoba-rhel:7.8
    docker_command: CMD source ~/.bashrc && /srv/app/Jatoba/install/rpm/build.sh
    cmake_version: cmake
    python3_devel: >
        BuildRequires:	python3-devel
    python_devel: >
        BuildRequires:	python2-devel
    
REDOS73:
    (*): [REDOS72]
    os_name: redos73
    os_adder: murom
    text_name: семейство RedHat, RED OS 7.3 Murom
    docker_image: jatoba-redos:7.3
    install_postgresql: 
        ->: ALTEROS7
    docker_command: CMD source ~/.bashrc && /srv/app/Jatoba/install/rpm/build.sh
    cmake_version: cmake3
    disable_params:
        ->: ALTEROS7

REDOS72:
    (*): [CENTOS78]
    os_name: redos72
    os_adder: murom
    text_name: семейство RedHat, RED OS 7.2 Murom
    docker_image: jatoba-redos:7.2
    install_postgresql: 
        ->: ALTEROS7
    docker_command: CMD source ~/.bashrc && /srv/app/Jatoba/install/rpm/build.sh
    disable_params: Null
    cmake_version: cmake3
    geos_devel_choice: |
        %if 0%{?redos} || ( 0%{?rhel} && 0%{?rhel} <= 6 )
        BuildRequires:  geos-devel >= %{geosminorversion}
        %else
        BuildRequires:  geos%{geosversion}-devel >= %{geosminorversion}
        %endif
    proj_devel_choice: |
        {{SPACE}}{{SPACE}}%if 0%{?redos} || ( 0%{?rhel} && 0%{?rhel} <= 6 )
        BuildRequires:  proj-devel >= %{projfullversion} flex json-c-devel
        {{SPACE}}{{SPACE}}%else
        BuildRequires:  proj%{projversion}-devel >= %{projfullversion} flex json-c-devel
        {{SPACE}}{{SPACE}}%endif
        %endif
    lib_gdal_devel_choice: |
        {{SPACE}}{{SPACE}}%if 0%{?redos} || ( 0%{?rhel} && 0%{?rhel} <= 6 )
        BuildRequires:  gdal-devel >= %{gdalminorversion}
        {{SPACE}}{{SPACE}}%else
        BuildRequires:  gdal%{gdalversion}-devel >= %{gdalminorversion}
        {{SPACE}}{{SPACE}}%endif
    lib_gdal_choice: |
        %if 0%{?redos} || ( 0%{?rhel} && 0%{?rhel} <= 6 )
        Requires:       gdal-libs >= 1.9.2-9
        %else
        Requires:       gdal >= %{gdalfullversion}
        %endif

ORACLE84:
    (*): [CENTOS78]
    os_name: oracle84
    text_name: семейство RedHat, Oracle Linux 8.4
    docker_image: jatoba-oraclelinux:8.4
    install_postgresql: 
        ->: ALTEROS7
    docker_command: CMD source ~/.bashrc && /srv/app/Jatoba/install/rpm/build.sh
    disable_params: |
        # Отключение параметров
        unset JATOBA_BUILD_JAPOOLER
        unset JATOBA_BUILD_PLSPGSQL
        unset JATOBA_BUILD_POSTGIS
    prepare_gcc_path: |
        export CC=$(which gcc)
        export CXX=$(which g++)
    check_gcc: |
        check_gcc || _exit $LINENO "GNU C Compiler not found."
        local _gcc_major_version=$($CC -dumpversion | sed -n 's/\([0-9]\+\).*/\1/p')
    gcc_name: $CC
    ext_utils_build: >
        BuildRequires:	perl-ExtUtils-MakeMaker
    perl_name: perl-interpreter
        
ORACLE78:
    (*): [CENTOS78]
    os_name: oracle78
    text_name: семейство RedHat, Oracle Linux 7.8
    docker_image: jatoba-oraclelinux:7.8
    install_postgresql: 
        ->: ALTEROS7
    docker_command: CMD source ~/.bashrc && /srv/app/Jatoba/install/rpm/build.sh
    disable_params: |
        # Отключение параметров
        unset JATOBA_BUILD_JAPOOLER
        unset JATOBA_BUILD_PLSPGSQL
        unset JATOBA_BUILD_POSTGIS
       
OPENSUSE42SP3:
    (*): [OPENSUSE15SP3]
    os_name: opensuse42sp3
    text_name: семейство RedHat, openSUSE Leap 42.3
    docker_image: jatoba-suse:42.3
    install_postgresql: >
        sudo zypper install -y "${_postgresql_packages[@]}" || _exit $LINENO "Error: zypper install: postgresql"
    lib_uuid_devel: libuuid-devel
    docker_command: CMD source ~/.bashrc && /srv/app/Jatoba/install/rpm/build.sh

OPENSUSE15SP3:
    (*): [ALTEROS7]
    os_name: opensuse15sp3
    text_name: семейство RedHat, openSUSE Leap 15.3
    docker_image: jatoba-suse:15.3
    python3_devel: >
        BuildRequires:	python3-devel
    python_devel: >
        BuildRequires:	python-devel
    cmake_version: cmake
    docker_command: CMD source ~/.bashrc && /srv/app/Jatoba/install/rpm/opensuse15sp3/build.sh
    disable_params: |
        # Отключение параметров
        unset JATOBA_BUILD_PLSPGSQL
        unset JATOBA_BUILD_POSTGIS
    install_postgresql: >
        sudo zypper install -y --allow-unsigned-rpm "${_postgresql_packages[@]}" || _exit $LINENO "Error: zypper install: postgresql"
    check_gcc: |
        check_gcc || _exit $LINENO "GNU C Compiler not found."
        local _gcc_major_version=$($CC -dumpversion | sed -n 's/\([0-9]\+\).*/\1/p')
        echo "GCC version found - $_gcc_major_version"
    package_manager: zypper
    gcc_name: $CC
    remove_jatoba: rpm -qa | grep jatoba | sudo xargs zypper remove -y
    google_tests : echo "set(GTEST_ROOT \"/opt/googletest-1.10.0\")" >> LocalConfig.cmake || exit 1
    selinux: |
        %if 0%{?suse_version} < 1500
        BuildRequires:	selinux-policy >= 3.9.13
        %endif
    jadog_ncurses: |
        BuildRequires: libncurses-devel
        Requires: libncurses

CENTOS82:
    (*): [ALTEROS7]
    os_name: centos82
    text_name: семейство RedHat, CentOS 8.2
    docker_image: jatoba-centos:8
    python3_devel: >
        BuildRequires:	python3-devel
    python_devel: >
        BuildRequires:	python2-devel
    cmake_version: cmake3
    docker_command: ENTRYPOINT ["/srv/app/Jatoba/install/rpm/build.sh"]
    disable_params: Null

CENTOS78:
    (*): [ALTEROS7]
    os_name: centos78
    text_name: семейство RedHat, CentOS 7.8
    docker_image: jatoba-centos:7.8
    python3_devel: >
        BuildRequires:	python3-devel
    python_devel: >
        BuildRequires:	python2-devel
    cmake_version: cmake
    docker_command: CMD source ~/.bashrc && /srv/app/Jatoba/install/rpm/build.sh
    
    
ALTEROS7:
    os_name: alteros7
    add_command : source ~/.bashrc &&
    text_name: семейство RedHat, AlterOS 7.5
    docker_image: jatoba-alteros:7.5
    docker_command: CMD source ~/.bashrc && /srv/app/Jatoba/install/rpm/build.sh
    disable_params: |
        # Отключение параметров
        unset JATOBA_BUILD_POSTGIS
    define_short: |
        -D{{SPACE}}
    quotes: >
        "
    segsize: segsize
    paths_address_standardizer: |
        %{JATOBA_DIR_HOME}/lib/address_standardizer.so
        %{JATOBA_DIR_HOME}/lib/liblwgeom.so
        %{JATOBA_DIR_HOME}/share/extension/address_standardizer*.sql
        %{JATOBA_DIR_HOME}/share/extension/address_standardizer*.control
    bitcode_address_standardizer: |
        %{JATOBA_DIR_HOME}/lib/bitcode/address_standardizer*.bc
        %{JATOBA_DIR_HOME}/lib/bitcode/address_standardizer/*.bc
    lib_json_name: json-c
    lib_geos_name: geos
    install_postgresql: >
        sudo yum -C -y install "${_postgresql_packages[@]}" || _exit $LINENO "Error: yum install: postgresql"
    package_manager: yum
    remove_jatoba:
        rpm -qa | grep jatoba | sudo xargs yum -y remove
    create_repo: |
        # Создаем репозиторий
        mkdir -p "$REPODIR/packages"
        cp "$JATOBA_BUILD_DIR_RPMS/"*.rpm "$REPODIR/packages/"
        gpg -a --export > "$REPODIR/$REPOPUBKEYNAME"
        createrepo "$REPODIR"
        echo "$REPOSECKEYPASS" | gpg --batch --no-tty --passphrase-fd 0 --detach-sign --armor "$REPODIR/repodata/repomd.xml"
    su_runuser: |
        if [ -x /sbin/runuser ]
        then
            SU=runuser
        else
            SU=su
        fi
    su_bash: >
        {{EMPTY}}
    lib_gdal_choice: |
        %if 0%{?rhel} && 0%{?rhel} > 6
        Requires:       gdal-libs >= 1.9.2-9
        %else
        Requires:       gdal >= %{gdalfullversion}
        %endif
    lib_hdf5: hdf5
    startTestsIfSUSEVers:
        ->: ALT8
    brc_compess: >
        %{?beta:%global __os_install_post /usr/lib/rpm/brp-compress}
    perl_filters:
        ->: ALT8
    ext_utils_build: >
        BuildRequires:	perl(ExtUtils::MakeMaker)
    requires_libicu:
        ->: ALT8
    python3_devel: >
        BuildRequires:	python34-devel
    python_devel: >
        BuildRequires:	python-devel
    selinux: >
        BuildRequires:	selinux-policy >= 3.9.13
    sysinit: systemd-sysv
    glibc_libs:
        ->: ALT8
    perl_test_simple: perl-Test-Simple
    perl_module_compat: >
        Requires:	perl(:MODULE_COMPAT_%(eval "`%{__perl} -V:version`"; echo $version))
    global_req_perl: |
        %global __perl_requires %{SOURCE16}{{NEWSTR}}
    cmake_version:
        cmake3
    configure_disable_path: enable
    alter_entries_bin: |
        {{EMPTY}}
        # Create alternatives entries for common binaries and man files
        %post
        %{_sbindir}/update-alternatives --install %{_bindir}/psql jatoba-psql %{JATOBA_DIR_HOME}/bin/psql %{JATOBA_MAJ_VER}0
        %{_sbindir}/update-alternatives --install %{_bindir}/clusterdb jatoba-clusterdb %{JATOBA_DIR_HOME}/bin/clusterdb %{JATOBA_MAJ_VER}0
        %{_sbindir}/update-alternatives --install %{_bindir}/createdb jatoba-createdb %{JATOBA_DIR_HOME}/bin/createdb %{JATOBA_MAJ_VER}0
        %{_sbindir}/update-alternatives --install %{_bindir}/createuser jatoba-createuser %{JATOBA_DIR_HOME}/bin/createuser %{JATOBA_MAJ_VER}0
        %{_sbindir}/update-alternatives --install %{_bindir}/dropdb jatoba-dropdb %{JATOBA_DIR_HOME}/bin/dropdb %{JATOBA_MAJ_VER}0
        %{_sbindir}/update-alternatives --install %{_bindir}/dropuser jatoba-dropuser %{JATOBA_DIR_HOME}/bin/dropuser %{JATOBA_MAJ_VER}0
        %{_sbindir}/update-alternatives --install %{_bindir}/pg_basebackup jatoba-pg_basebackup %{JATOBA_DIR_HOME}/bin/pg_basebackup %{JATOBA_MAJ_VER}0
        %{_sbindir}/update-alternatives --install %{_bindir}/pg_dump jatoba-pg_dump %{JATOBA_DIR_HOME}/bin/pg_dump %{JATOBA_MAJ_VER}0
        %{_sbindir}/update-alternatives --install %{_bindir}/pg_dumpall jatoba-pg_dumpall %{JATOBA_DIR_HOME}/bin/pg_dumpall %{JATOBA_MAJ_VER}0
        %{_sbindir}/update-alternatives --install %{_bindir}/pg_restore jatoba-pg_restore %{JATOBA_DIR_HOME}/bin/pg_restore %{JATOBA_MAJ_VER}0
        %{_sbindir}/update-alternatives --install %{_bindir}/reindexdb jatoba-reindexdb %{JATOBA_DIR_HOME}/bin/reindexdb %{JATOBA_MAJ_VER}0
        %{_sbindir}/update-alternatives --install %{_bindir}/vacuumdb jatoba-vacuumdb %{JATOBA_DIR_HOME}/bin/vacuumdb %{JATOBA_MAJ_VER}0
        %{_sbindir}/update-alternatives --install %{_mandir}/man1/clusterdb.1 jatoba-clusterdbman %{JATOBA_DIR_HOME}/share/doc/man/man1/clusterdb.1 %{JATOBA_MAJ_VER}0
        %{_sbindir}/update-alternatives --install %{_mandir}/man1/createdb.1 jatoba-createdbman %{JATOBA_DIR_HOME}/share/doc/man/man1/createdb.1 %{JATOBA_MAJ_VER}0
        %{_sbindir}/update-alternatives --install %{_mandir}/man1/createuser.1 jatoba-createuserman %{JATOBA_DIR_HOME}/share/doc/man/man1/createuser.1 %{JATOBA_MAJ_VER}0
        %{_sbindir}/update-alternatives --install %{_mandir}/man1/dropdb.1 jatoba-dropdbman %{JATOBA_DIR_HOME}/share/doc/man/man1/dropdb.1 %{JATOBA_MAJ_VER}0
        %{_sbindir}/update-alternatives --install %{_mandir}/man1/dropuser.1 jatoba-dropuserman %{JATOBA_DIR_HOME}/share/doc/man/man1/dropuser.1 %{JATOBA_MAJ_VER}0
        %{_sbindir}/update-alternatives --install %{_mandir}/man1/pg_basebackup.1 jatoba-pg_basebackupman %{JATOBA_DIR_HOME}/share/doc/man/man1/pg_basebackup.1 %{JATOBA_MAJ_VER}0
        %{_sbindir}/update-alternatives --install %{_mandir}/man1/pg_dump.1 jatoba-pg_dumpman %{JATOBA_DIR_HOME}/share/doc/man/man1/pg_dump.1 %{JATOBA_MAJ_VER}0
        %{_sbindir}/update-alternatives --install %{_mandir}/man1/pg_dumpall.1 jatoba-pg_dumpallman %{JATOBA_DIR_HOME}/share/doc/man/man1/pg_dumpall.1 %{JATOBA_MAJ_VER}0
        %{_sbindir}/update-alternatives --install %{_mandir}/man1/pg_restore.1 jatoba-pg_restoreman %{JATOBA_DIR_HOME}/share/doc/man/man1/pg_restore.1 %{JATOBA_MAJ_VER}0
        %{_sbindir}/update-alternatives --install %{_mandir}/man1/psql.1 jatoba-psqlman %{JATOBA_DIR_HOME}/share/doc/man/man1/psql.1 %{JATOBA_MAJ_VER}0
        %{_sbindir}/update-alternatives --install %{_mandir}/man1/reindexdb.1 jatoba-reindexdbman %{JATOBA_DIR_HOME}/share/doc/man/man1/reindexdb.1 %{JATOBA_MAJ_VER}0
        %{_sbindir}/update-alternatives --install %{_mandir}/man1/vacuumdb.1 jatoba-vacuumdbman %{JATOBA_DIR_HOME}/share/doc/man/man1/vacuumdb.1 %{JATOBA_MAJ_VER}0

        %post libs
        %{_sbindir}/update-alternatives --install /etc/ld.so.conf.d/%{productname}-%{JATOBA_MAJ_VER}-libs.conf jatoba-ld-conf %{JATOBA_DIR_HOME}/share/%{productname}-%{JATOBA_MAJ_VER}-libs.conf %{JATOBA_MAJ_VER}0
        /sbin/ldconfig

        # Drop alternatives entries for common binaries and man files
        %postun
        if [ "$1" -eq 0 ]
          then
        {{TAB}}# Only remove these links if the package is completely removed from the system (vs.just being upgraded)
        {{TAB}}%{_sbindir}/update-alternatives --remove jatoba-psql		%{JATOBA_DIR_HOME}/bin/psql
        {{TAB}}%{_sbindir}/update-alternatives --remove jatoba-clusterdb	%{JATOBA_DIR_HOME}/bin/clusterdb
        {{TAB}}%{_sbindir}/update-alternatives --remove jatoba-clusterdbman	%{JATOBA_DIR_HOME}/share/doc/man/man1/clusterdb.1
        {{TAB}}%{_sbindir}/update-alternatives --remove jatoba-createdb	%{JATOBA_DIR_HOME}/bin/createdb
        {{TAB}}%{_sbindir}/update-alternatives --remove jatoba-createdbman	%{JATOBA_DIR_HOME}/share/doc/man/man1/createdb.1
        {{TAB}}%{_sbindir}/update-alternatives --remove jatoba-createuser	%{JATOBA_DIR_HOME}/bin/createuser
        {{TAB}}%{_sbindir}/update-alternatives --remove jatoba-createuserman	%{JATOBA_DIR_HOME}/share/doc/man/man1/createuser.1
        {{TAB}}%{_sbindir}/update-alternatives --remove jatoba-dropdb		%{JATOBA_DIR_HOME}/bin/dropdb
        {{TAB}}%{_sbindir}/update-alternatives --remove jatoba-dropdbman	%{JATOBA_DIR_HOME}/share/doc/man/man1/dropdb.1
        {{TAB}}%{_sbindir}/update-alternatives --remove jatoba-dropuser	%{JATOBA_DIR_HOME}/bin/dropuser
        {{TAB}}%{_sbindir}/update-alternatives --remove jatoba-dropuserman	%{JATOBA_DIR_HOME}/share/doc/man/man1/dropuser.1
        {{TAB}}%{_sbindir}/update-alternatives --remove jatoba-pg_basebackup	%{JATOBA_DIR_HOME}/bin/pg_basebackup
        {{TAB}}%{_sbindir}/update-alternatives --remove jatoba-pg_dump		%{JATOBA_DIR_HOME}/bin/pg_dump
        {{TAB}}%{_sbindir}/update-alternatives --remove jatoba-pg_dumpall	%{JATOBA_DIR_HOME}/bin/pg_dumpall
        {{TAB}}%{_sbindir}/update-alternatives --remove jatoba-pg_dumpallman	%{JATOBA_DIR_HOME}/share/doc/man/man1/pg_dumpall.1
        {{TAB}}%{_sbindir}/update-alternatives --remove jatoba-pg_basebackupman	%{JATOBA_DIR_HOME}/share/doc/man/man1/pg_basebackup.1
        {{TAB}}%{_sbindir}/update-alternatives --remove jatoba-pg_dumpman	%{JATOBA_DIR_HOME}/share/doc/man/man1/pg_dump.1
        {{TAB}}%{_sbindir}/update-alternatives --remove jatoba-pg_restore	%{JATOBA_DIR_HOME}/bin/pg_restore
        {{TAB}}%{_sbindir}/update-alternatives --remove jatoba-pg_restoreman	%{JATOBA_DIR_HOME}/share/doc/man/man1/pg_restore.1
        {{TAB}}%{_sbindir}/update-alternatives --remove jatoba-psqlman		%{JATOBA_DIR_HOME}/share/doc/man/man1/psql.1
        {{TAB}}%{_sbindir}/update-alternatives --remove jatoba-reindexdb	%{JATOBA_DIR_HOME}/bin/reindexdb
        {{TAB}}%{_sbindir}/update-alternatives --remove jatoba-reindexdbman	%{JATOBA_DIR_HOME}/share/doc/man/man1/reindexdb.1
        {{TAB}}%{_sbindir}/update-alternatives --remove jatoba-vacuumdb		%{JATOBA_DIR_HOME}/bin/vacuumdb
        {{TAB}}%{_sbindir}/update-alternatives --remove jatoba-vacuumdbman	%{JATOBA_DIR_HOME}/share/doc/man/man1/vacuumdb.1
          fi

        %postun libs
        if [ "$1" -eq 0 ]
          then
        {{TAB}}%{_sbindir}/update-alternatives --remove jatoba-ld-conf		%{JATOBA_DIR_HOME}/share/%{productname}-%{JATOBA_MAJ_VER}-libs.conf
        {{TAB}}/sbin/ldconfig
        fi
        {{EMPTY}}
    gdalversion: 21
    gdalfullversion: 2.1.2
    global_utils: 1
    global_raster: 0
    geos_devel_choice: |
        %if 0%{?rhel} && 0%{?rhel} > 6
        BuildRequires:  geos-devel >= %{geosminorversion}
        %else
        BuildRequires:  geos%{geosversion}-devel >= %{geosminorversion}
        %endif
    proj_devel_choice: |
        {{SPACE}}{{SPACE}}%if 0%{?rhel} && 0%{?rhel} > 6
        BuildRequires:  proj-devel >= %{projfullversion} flex json-c-devel
        {{SPACE}}{{SPACE}}%else
        BuildRequires:  proj%{projversion}-devel >= %{projfullversion} flex json-c-devel
        {{SPACE}}{{SPACE}}%endif
        %endif
    lib_gdal_devel_choice: |
        {{SPACE}}{{SPACE}}%if 0%{?rhel} && 0%{?rhel} > 6
        BuildRequires:  gdal-devel >= %{gdalminorversion}
        {{SPACE}}{{SPACE}}%else
        BuildRequires:  gdal%{gdalversion}-devel >= %{gdalminorversion}
        {{SPACE}}{{SPACE}}%endif
    provide_postgiman: >
        Provides:       %{sname}2_%{POSTGRESQL_MAJ_VER} => %{postgismajorversion}.0
    address_standradizer: >
        %{JATOBA_DIR_HOME}/share/doc/extension/README.address_standardizer

ALT8:
    os_name: alt8
    text_name: семейство Alt Linux, Alt Linux 8
    without_address_standardizer: --without-address-standardizer \
    docker_command: CMD /srv/app/Jatoba/install/rpm/build.sh
    docker_image: 
        jatoba-alt:8
    startTestsIfSUSEVers: |
        %if 0%{?rhel} || 0%{?suse_version} >= 1315
        %{!?enabletaptests:%global enabletaptests 0}
        %else
        %{!?enabletaptests:%global enabletaptests 1}
        %endif
    perl_filters: >
        Source16:	%{productname}-filter-requires-perl-Pg.sh
    requires_libicu: >
        Requires:	libicu
    selinux: >
        BuildRequires:	selinux-policy-alt >= 0.0.38
    glibc_libs: |
        Requires(post):		glibc
        Requires(postun):	glibc
    global_req_perl: >
        %global __perl_requires %{SOURCE16}
    create_repo: |
        # Создаем репозиторий
        mkdir -p "$REPODIR/packages"
        cp "$JATOBA_BUILD_DIR_RPMS/"*.rpm "$REPODIR/packages/"
        gpg -a --export > "$REPODIR/$REPOPUBKEYNAME"
        createrepo_c "$REPODIR"
        echo "$REPOSECKEYPASS" | gpg --batch --no-tty --passphrase-fd 0 --detach-sign --armor "$REPODIR/repodata/repomd.xml"
    find_debug: |
        %global __find_debuginfo_files %nil
    alter_entries_bin: >
        {{EMPTY}}
    set_verify_method: |
        %set_verify_elf_method unresolved=relaxed
    many_pre_setting_paths: |
        {{EMPTY}}
        %{__mkdir} -p %buildroot%_altdir
        cat << __EOF__ > %buildroot%_altdir/%{productname}%{JATOBA_MAJ_VER}.alternatives
        %{_bindir}/psql	%{JATOBA_DIR_HOME}/bin/psql %{JATOBA_MAJ_VER}0
        %{_bindir}/clusterdb	%{JATOBA_DIR_HOME}/bin/clusterdb %{JATOBA_MAJ_VER}0
        %{_bindir}/createdb	%{JATOBA_DIR_HOME}/bin/createdb %{JATOBA_MAJ_VER}0
        %{_bindir}/createuser 	%{JATOBA_DIR_HOME}/bin/createuser %{JATOBA_MAJ_VER}0
        %{_bindir}/dropdb	%{JATOBA_DIR_HOME}/bin/dropdb %{JATOBA_MAJ_VER}0
        %{_bindir}/dropuser	%{JATOBA_DIR_HOME}/bin/dropuser %{JATOBA_MAJ_VER}0
        %{_bindir}/pg_basebackup	%{JATOBA_DIR_HOME}/bin/pg_basebackup %{JATOBA_MAJ_VER}0
        %{_bindir}/pg_dump	%{JATOBA_DIR_HOME}/bin/pg_dump %{JATOBA_MAJ_VER}0
        %{_bindir}/pg_dumpall	%{JATOBA_DIR_HOME}/bin/pg_dumpall %{JATOBA_MAJ_VER}0
        %{_bindir}/pg_restore	%{JATOBA_DIR_HOME}/bin/pg_restore %{JATOBA_MAJ_VER}0
        %{_bindir}/reindexdb	%{JATOBA_DIR_HOME}/bin/reindexdb %{JATOBA_MAJ_VER}0
        %{_bindir}/vacuumdb	%{JATOBA_DIR_HOME}/bin/vacuumdb %{JATOBA_MAJ_VER}0
        %{_mandir}/man1/clusterdb.1	%{JATOBA_DIR_HOME}/share/doc/man/man1/clusterdb.1 %{JATOBA_MAJ_VER}0
        %{_mandir}/man1/createdb.1	%{JATOBA_DIR_HOME}/share/doc/man/man1/createdb.1 %{JATOBA_MAJ_VER}0
        %{_mandir}/man1/createuser.1	%{JATOBA_DIR_HOME}/share/doc/man/man1/createuser.1 %{JATOBA_MAJ_VER}0
        %{_mandir}/man1/dropdb.1	%{JATOBA_DIR_HOME}/share/doc/man/man1/dropdb.1 %{JATOBA_MAJ_VER}0
        %{_mandir}/man1/dropuser.1	%{JATOBA_DIR_HOME}/share/doc/man/man1/dropuser.1 %{JATOBA_MAJ_VER}0
        %{_mandir}/man1/pg_basebackup.1	%{JATOBA_DIR_HOME}/share/doc/man/man1/pg_basebackup.1 %{JATOBA_MAJ_VER}0
        %{_mandir}/man1/pg_dump.1	%{JATOBA_DIR_HOME}/share/doc/man/man1/pg_dump.1 %{JATOBA_MAJ_VER}0
        %{_mandir}/man1/pg_dumpall.1	%{JATOBA_DIR_HOME}/share/doc/man/man1/pg_dumpall.1 %{JATOBA_MAJ_VER}0
        %{_mandir}/man1/pg_restore.1	%{JATOBA_DIR_HOME}/share/doc/man/man1/pg_restore.1 %{JATOBA_MAJ_VER}0
        %{_mandir}/man1/psql.1	%{JATOBA_DIR_HOME}/share/doc/man/man1/psql.1 %{JATOBA_MAJ_VER}0
        %{_mandir}/man1/reindexdb.1	%{JATOBA_DIR_HOME}/share/doc/man/man1/reindexdb.1 %{JATOBA_MAJ_VER}0
        %{_mandir}/man1/vacuumdb.1	%{JATOBA_DIR_HOME}/share/doc/man/man1/vacuumdb.1 %{JATOBA_MAJ_VER}0
        __EOF__
        {{EMPTY}}
    eof_sysconfig: |
        %{__mkdir} -p %buildroot%_sysconfdir/ld.so.conf.d
        cat << __EOF__ > %{buildroot}%_sysconfdir/ld.so.conf.d/%{productname}-%{JATOBA_MAJ_VER}-libs.conf
        /usr/jatoba-%{JATOBA_MAJ_VER}/bin/
        /usr/jatoba-%{JATOBA_MAJ_VER}/lib/
        __EOF__
        {{EMPTY}}
    jatoba_path_conf:
        cp /usr/jatoba-2/share/jatoba-2-libs.conf /etc/ld.so.conf.d/
    alt_dir: >
        %_altdir/%{name}.alternatives
    set_verify_method_skip: |
        {{EMPTY}}
        %set_verify_elf_method skip
    jadog_ncurses: |
        BuildRequires: libncurses-devel
        Requires: libncurses

ALT82SP:
    (*): ALT8
    os_name: alt82sp
    text_name: семейство Alt Linux, Alt Linux 8.2 SP
    docker_command: CMD /srv/app/Jatoba/install/rpm/build.sh
    docker_image: >
        jatoba-alt82sp:8.2
    startTestsIfSUSEVers: >
        %{!?enabletaptests:%global enabletaptests 0}
    requires_libicu: >
        Requires:	libicu65
    perl_filters: Null
    global_req_perl: Null
    selinux: >
        BuildRequires:	libselinux-devel
    glibc_libs: |
        Requires(post):		glibc-core
        Requires(postun):	glibc-core
    path_lib_perl: |
        %filter_from_requires /^\/usr\/lib64\/perl5/d
    disable_params: |
        # Отключение параметров
        unset JATOBA_BUILD_PGBADGER
        unset JATOBA_BUILD_PLSPGSQL
        unset JATOBA_BUILD_POSTGIS
    create_repo: |
        # Создаем репозиторий
        mkdir -p "$REPODIR/x86_64/RPMS"
        genbasedir --create --topdir=$REPODIR/ x86_64 classic
        cp "$JATOBA_BUILD_DIR_RPMS/"*.rpm "$REPODIR/x86_64/RPMS/"

        # Создание символической ссылки необходимо для создания файлов pkglist
        ln -s $REPODIR/x86_64/RPMS/ $REPODIR/x86_64/RPMS.classic

        genbasedir --bloat --progress --topdir=$REPODIR/ x86_64 classic
        gpg -a --export > "$REPODIR/$REPOPUBKEYNAME"
        #createrepo_c "$REPODIR"
        echo "$REPOSECKEYPASS" | gpg --batch --no-tty --passphrase-fd 0 --detach-sign --armor "$REPODIR/x86_64/base/release"
    
ALT91:
    (*): ALT8
    os_name: alt91
    text_name: семейство Alt Linux, Alt Linux Server 9.1
    alter_entries_bin: >
        {{EMPTY}}
    docker_command: CMD /srv/app/Jatoba/install/rpm/build.sh
    docker_image: >
        jatoba-alt-server:9.1
    disable_params: |
        # Отключение параметров, task 108413
        unset JATOBA_BUILD_PLSPGSQL
        unset JATOBA_BUILD_POSTGIS

# вынесены alt8, 82, 9





